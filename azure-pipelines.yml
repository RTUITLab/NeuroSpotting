name: $(BuildID)-$(Build.SourceBranchName)

pool:
  vmImage: 'ubuntu-latest'

variables:
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build app
  jobs:  
  - job: Build
    displayName: Build angular app
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'Install Node.js'

    - script: |
        npm ci
        npm run build-prod
      displayName: 'npm run build'
    - task: CopyFiles@2
      displayName: copy dist to deploy
      inputs:
        SourceFolder: 'dist/AngularTest'
        Contents: '**'
        TargetFolder: 'deploy/dist'
    - publish: deploy
      artifact: neurospotting
- stage: DeployImage
  displayName: Deploy image
  jobs:
  - job: Deploy
    displayName: BuildAndPushImage
    steps:
    - download: current
      artifact: neurospotting
    - task: Docker@2
      displayName: Build and push image
      inputs:
        containerRegistry: 'rtuitlab connection by admin'
        repository: 'rtuitlab/neurospotting'
        command: 'buildAndPush'
        Dockerfile: '$(Pipeline.Workspace)/neurospotting/Dockerfile'
        buildContext: '$(Pipeline.Workspace)/neurospotting'
        tags: |
          $(tag)
          latest
- stage: Deploy
  displayName: Deploy service
  jobs:
  - job: Deploy_key_rec
    condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
    steps:
    - task: SSH@0
      displayName: Restart service
      inputs:
        sshEndpoint: 'sc vm'
        runOptions: 'inline'
        inline: |
          cd /home/admin/key-rec
          docker-compose --no-ansi pull 2>&1
          docker-compose --no-ansi up -d 2>&1
        failOnStdErr: false
        readyTimeout: '20000'